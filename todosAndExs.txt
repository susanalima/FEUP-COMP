TODO LIST:
  1. RESOLVER CENA DO MENOS
  4. FAZER ALTO REFACTORING NESTE TRETA
  6. CHANGE istore TO BE ACCORDING WITH THE TYPE
  8. Cena do aload true e false  -> Na JVM o valor "true" é representado pelo inteiro 1 e o "false" pelo 0.
  9. Check cena do string&array -> se é [S
  13. o getfield e putfield precisam do aload_0 antes???
  15. CODIGO PARA variavel.length -> arraylength?
  17. Nao me cheira que isto esteja bem -> ios/pp(LC;;)I

************************************************************************
    public void Test(int[] array) {
        System.out.println(new Symbol().toString());

         public void Test(int[]);
    Code:
       0: getstatic     #19                 // Field java/lang/System.out:Ljava/io/PrintStream;
       3: new           #20                 // class Symbol
       6: dup
       7: invokespecial #21                 // Method "<init>":()V
      10: invokevirtual #22                 // Method toString:()Ljava/lang/String;
      13: invokevirtual #23                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      16: return
    }

************************************************************************
     public void Test(int[] array) {
        System.out.println(new Symbol().getCounter(1));
    }

    public void Test(int[]);
    Code:
       0: getstatic     #19                 // Field java/lang/System.out:Ljava/io/PrintStream;       3: new           #20                 // class Symbol
       6: dup
       7: invokespecial #21                 // Method "<init>":()V
      10: iconst_1
      11: invokevirtual #22                 // Method getCounter:(I)I
      14: invokevirtual #23                 // Method java/io/PrintStream.println:(I)V
      17: return}

************************************************************************
    public void Test(int[] array) {
        int x = new Symbol().getCounter(1);
    }

     public void Test(int[]);
    Code:
       0: new           #19                 // class Symbol
       3: dup
       4: invokespecial #20                 // Method "<init>":()V
       7: iconst_1
       8: invokevirtual #21                 // Method getCounter:(I)I
      11: istore_2
      12: return
************************************************************************
    public void Test(int[] array) {
        int x = new Symbol().getCounter(1);
        boolean a = x < 1;
    }

    public void Test(int[]);
    Code:
       0: new           #19                 // class Symbol
       3: dup
       4: invokespecial #20                 // Method "<init>":()V
       7: iconst_1
       8: invokevirtual #21                 // Method getCounter:(I)I
      11: istore_2
      12: iload_2
      13: iconst_1
      14: if_icmpge     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: istore_3
      23: return